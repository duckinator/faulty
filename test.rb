#!/usr/bin/env ruby

def gen(row, col)
  ((row + col) % ((row + 1 / (col + 1)) + 1) - 10) % 10
end


cols = 25
rows = 20

0.upto(rows - 1) do |col|
  0.upto(cols - 1) do |row|
    print gen(row, col)
  end
  puts
end

__END__

$values = "11111111111111111111111111000022466666666666666661100002246666677777777766110000224666670000000007711000022366670000000000071100000000000000000000009110000000000000000000000001000023320000000000000000100002332000000000000000010000233200000000000000001000023320000000000000001100000000000000000000000110000000000000000000000011000023350000000000000001100002335000000000000000110000233500000000000000011800023350000000000000001188000000000007557000000118880000000007666670000011111111111111111111111111".split('').map(&:to_i)

def generate(idx)
  1
end

$values.each_with_index { |x, idx|
  if $values[idx] != generate(idx)
    puts "f(#{idx}) = #{x}, got #{generate(idx)}"
  end
}
